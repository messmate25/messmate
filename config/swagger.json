{
  "openapi": "3.0.0",
  "info": {
    "title": "Mess Food Management API",
    "version": "1.0.0",
    "description": "API documentation for Mess Food Management System (Auth, Student, Admin, Guest)."
  },
  "servers": [
    {
      "url": "https://messapp-dkfffueseegwexf9.centralindia-01.azurewebsites.net",
      "description": "Prod Server"
    },
    {
      "url": "http://localhost:8080",
      "description": "Local Dev"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "MealType": {
        "type": "string",
        "enum": [
          "breakfast",
          "lunch",
          "dinner"
        ]
      },
      "DayOfWeek": {
        "type": "string",
        "enum": [
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
          "Sunday"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "room_no": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "student",
              "admin",
              "super_admin"
            ]
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "room_no": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "student",
              "admin",
              "super_admin"
            ]
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "userId": {
            "type": "integer"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "role": {
                "type": "string"
              }
            }
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Guest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "mobile_number": {
            "type": "string"
          },
          "wallet_balance": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "GuestSignupRequest": {
        "type": "object",
        "required": [
          "name",
          "mobile_number"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "mobile_number": {
            "type": "string"
          }
        }
      },
      "GuestSignupResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "otp": {
            "type": "string"
          }
        }
      },
      "GuestVerifyRequest": {
        "type": "object",
        "required": [
          "mobile_number",
          "otp"
        ],
        "properties": {
          "mobile_number": {
            "type": "string"
          },
          "otp": {
            "type": "string"
          }
        }
      },
      "GuestVerifyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "role": {
                "type": "string",
                "enum": [
                  "guest"
                ]
              }
            }
          },
          "token": {
            "type": "string"
          }
        }
      },
      "MenuItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image_url": {
            "type": "string",
            "format": "uri",
            "description": "URL to the menu item image"
          },
          "estimated_prep_time": {
            "type": "integer",
            "description": "Minutes"
          },
          "monthly_limit": {
            "type": "integer"
          },
          "extra_price": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "MenuItemCreateRequest": {
        "type": "object",
        "required": [
          "name",
          "estimated_prep_time",
          "monthly_limit",
          "extra_price"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "estimated_prep_time": {
            "type": "integer"
          },
          "monthly_limit": {
            "type": "integer"
          },
          "extra_price": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "MenuItemCreateResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "item": {
            "$ref": "#/components/schemas/MenuItem"
          }
        }
      },
      "WeeklyMenuEntry": {
        "type": "object",
        "required": [
          "day_of_week",
          "meal_type",
          "menuItemId",
          "imageUrl"
        ],
        "properties": {
          "day_of_week": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "meal_type": {
            "$ref": "#/components/schemas/MealType"
          },
          "menuItemId": {
            "type": "integer"
          },
          "description": {
            "type": "string",
            "description": "Short description of the meal"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL to the meal image"
          }
        }
      },
      "SetWeeklyMenuRequest": {
        "type": "object",
        "required": [
          "week_start_date",
          "menu"
        ],
        "properties": {
          "week_start_date": {
            "type": "string",
            "format": "date"
          },
          "menu": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeeklyMenuEntry"
            }
          }
        }
      },
      "SetWeeklyMenuResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "StudentWeeklyMenuResponse": {
        "type": "object",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "breakfast": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MenuItem"
              }
            },
            "lunch": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MenuItem"
              }
            },
            "dinner": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MenuItem"
              }
            }
          }
        },
        "description": "Map: day_of_week -> { meal_type: MenuItem[] }"
      },
      "GuestWeeklyMenuResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MenuItem"
        }
      },
      "WeeklySelectionItem": {
        "type": "object",
        "required": [
          "meal_date",
          "meal_type",
          "menuItemId"
        ],
        "properties": {
          "meal_date": {
            "type": "string",
            "format": "date"
          },
          "meal_type": {
            "$ref": "#/components/schemas/MealType"
          },
          "menuItemId": {
            "type": "integer"
          }
        }
      },
      "WeeklySelectionSubmitRequest": {
        "type": "object",
        "required": [
          "week_start_date",
          "selections"
        ],
        "properties": {
          "week_start_date": {
            "type": "string",
            "format": "date"
          },
          "selections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeeklySelectionItem"
            }
          }
        }
      },
      "WeeklySelectionSubmitResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "WeeklySelectionPreviewRequest": {
        "type": "object",
        "required": [
          "selections"
        ],
        "properties": {
          "selections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeeklySelectionItem"
            }
          }
        }
      },
      "WeeklySelectionPreviewResponse": {
        "type": "object",
        "properties": {
          "total_extra_cost": {
            "type": "string"
          },
          "charged_items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "price": {
                  "type": "number",
                  "format": "float"
                },
                "date": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        }
      },
      "GenerateMealQRResponse": {
        "type": "object",
        "properties": {
          "qr_code_url": {
            "type": "string"
          }
        }
      },
      "GuestOrderRequest": {
        "type": "object",
        "required": [
          "menuItemId",
          "meal_date",
          "meal_type"
        ],
        "properties": {
          "menuItemId": {
            "type": "integer"
          },
          "meal_date": {
            "type": "string",
            "format": "date"
          },
          "meal_type": {
            "$ref": "#/components/schemas/MealType"
          }
        }
      },
      "GuestOrderResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "qr_code_url": {
            "type": "string"
          },
          "new_balance": {
            "type": "number",
            "format": "float"
          },
          "estimated_prep_time": {
            "type": "integer"
          }
        }
      },
      "ScanQRRequest": {
        "type": "object",
        "required": [
          "qr_data"
        ],
        "properties": {
          "qr_data": {
            "type": "string",
            "description": "Stringified JSON from QR"
          }
        }
      },
      "ScanQRResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "mealDetails": {
            "type": "object"
          }
        }
      },
      "RechargeGuestWalletRequest": {
        "type": "object",
        "required": [
          "guestId",
          "amount"
        ],
        "properties": {
          "guestId": {
            "type": "integer"
          },
          "amount": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "RechargeGuestWalletResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "guestId": {
            "type": "integer"
          },
          "new_balance": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "DashboardStatsResponse": {
        "type": "object",
        "properties": {
          "breakfast_count": {
            "type": "integer"
          },
          "lunch_count": {
            "type": "integer"
          },
          "dinner_count": {
            "type": "integer"
          },
          "total_guest_revenue": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "students": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "room_no": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              }
            }
          },
          "guests": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "mobile_number": {
                  "type": "string"
                },
                "wallet_balance": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Health check",
        "tags": [
          "Misc"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Service healthy (text)"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user (student/admin/super_admin)",
        "tags": [
          "Auth"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login (student/admin/super_admin)",
        "tags": [
          "Auth"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/guest/signup": {
      "post": {
        "summary": "Guest signup (Request OTP via Email)",
        "tags": [
          "Auth - Guest"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP generated and sent to guest's email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "OTP sent successfully to john@example.com"
                    },
                    "otp": {
                      "type": "string",
                      "example": "123456",
                      "description": "Only returned in development mode for debugging."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing name or email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Name and email are required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/guest/verify": {
      "post": {
        "summary": "Guest login (Verify OTP)",
        "tags": [
          "Auth - Guest"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "otp"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com"
                  },
                  "otp": {
                    "type": "string",
                    "example": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified, guest logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Guest logged in successfully!"
                    },
                    "result": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "role": {
                          "type": "string",
                          "example": "guest"
                        }
                      }
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token valid for 1 hour"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired OTP",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid or expired OTP."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Guest not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Guest not found. Please sign up first."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
  "/api/student/profile": {
    "get": {
      "summary": "Get student profile",
      "tags": [
        "Student"
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "404": {
          "description": "Not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/student/weekly-menu": {
    "get": {
      "summary": "Get weekly menu (grouped by day & meal)",
      "tags": [
        "Student"
      ],
      "parameters": [
        {
          "in": "query",
          "name": "week_start_date",
          "required": true,
          "schema": {
            "type": "string",
            "format": "date"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentWeeklyMenuResponse"
              }
            }
          }
        },
        "404": {
          "description": "No menu for given week",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/student/weekly-selection/preview": {
    "post": {
      "summary": "Preview costs for a weekly selection",
      "tags": [
        "Student"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WeeklySelectionPreviewRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeeklySelectionPreviewResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/student/weekly-selection": {
    "post": {
      "summary": "Submit weekly selection",
      "tags": [
        "Student"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/WeeklySelectionSubmitRequest"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Saved",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WeeklySelectionSubmitResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/student/meal-qr": {
    "get": {
      "summary": "Generate QR for a specific meal",
      "tags": [
        "Student"
      ],
      "parameters": [
        {
          "in": "query",
          "name": "meal_date",
          "required": true,
          "schema": {
            "type": "string",
            "format": "date"
          }
        },
        {
          "in": "query",
          "name": "meal_type",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MealType"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateMealQRResponse"
              }
            }
          }
        },
        "404": {
          "description": "No selection for that meal/date",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/student/usage-stats": {
    "get": {
      "summary": "Get monthly usage stats (by menu item)",
      "tags": [
        "Student"
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/weekly-menu": {
    "post": {
      "summary": "Set weekly menu (Super Admin only)",
      "tags": [
        "Admin"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SetWeeklyMenuRequest"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetWeeklyMenuResponse"
              }
            }
          }
        },
        "400": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/dashboard": {
    "get": {
      "summary": "Get dashboard stats for today",
      "tags": [
        "Admin"
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DashboardStatsResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/menu-items": {
    "post": {
      "summary": "Add a menu item (Thali)",
      "tags": [
        "Admin"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MenuItemCreateRequest"
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MenuItemCreateResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/scan-qr": {
    "post": {
      "summary": "Scan and validate a meal QR",
      "tags": [
        "Admin"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ScanQRRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanQRResponse"
              }
            }
          }
        },
        "409": {
          "description": "Already redeemed",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/guest/recharge": {
    "post": {
      "summary": "Recharge a guest wallet",
      "tags": [
        "Admin"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RechargeGuestWalletRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeGuestWalletResponse"
              }
            }
          }
        },
        "404": {
          "description": "Guest not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/users": {
    "get": {
      "summary": "List students and guests",
      "tags": [
        "Admin"
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/admin/users/{userId}": {
    "get": {
      "summary": "Get user by ID (students table)",
      "tags": [
        "Admin"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "404": {
          "description": "Not found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "delete": {
      "summary": "Delete user by ID (students table)",
      "tags": [
        "Admin"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "userId",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Deleted",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "409": {
          "description": "FK constraint error (has history)",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/student/weekly-selections": {
    "get": {
      "summary": "Get all weekly selections for the current week",
      "tags": [
        "Student"
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "week_start": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "week_end": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "selections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "meal_date": {
                          "type": "string",
                          "format": "date"
                        },
                        "meal_type": {
                          "$ref": "#/components/schemas/MealType"
                        },
                        "menuItem": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "image_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "extra_price": {
                              "type": "number",
                              "format": "float"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/guest/weekly-menu": {
    "get": {
      "summary": "Get weekly menu (guest view - unique Thalis)",
      "tags": [
        "Guest"
      ],
      "parameters": [
        {
          "in": "query",
          "name": "week_start_date",
          "required": true,
          "schema": {
            "type": "string",
            "format": "date"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestWeeklyMenuResponse"
              }
            }
          }
        },
        "404": {
          "description": "No menu for given week",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  },
  "/api/guest/orders/{id}": {
    "get": {
      "summary": "Get guest orders by guest ID",
      "tags": ["Guest"],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID of the guest"
        }
      ],
      "responses": {
        "200": {
          "description": "Guest orders fetched successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" },
                  "count": { "type": "integer" },
                  "orders": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "order_date": { "type": "string", "format": "date-time" },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "quantity": { "type": "integer" },
                              "menuItem": { "$ref": "#/components/schemas/MenuItem" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Guest or orders not found",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ErrorResponse" }
            }
          }
        }
      }
    }
  },
  "/api/admin/fetchGuestOrders": {
    "get": {
      "summary": "Fetch all guest orders (admin view)",
      "tags": ["Admin"],
      "security": [{ "bearerAuth": [] }],
      "responses": {
        "200": {
          "description": "Guest orders fetched successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": { "type": "string" },
                  "count": { "type": "integer" },
                  "orders": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "order_date": { "type": "string", "format": "date-time" },
                        "guest": { "$ref": "#/components/schemas/Guest" },
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "quantity": { "type": "integer" },
                              "menuItem": { "$ref": "#/components/schemas/MenuItem" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ErrorResponse" }
            }
          }
        }
      }
    }
  },
  "/api/admin/updateOrderStatus": {
    "post": {
      "summary": "Update status of a guest order",
      "tags": ["Admin"],
      "security": [{ "bearerAuth": [] }],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["orderId", "status"],
              "properties": {
                "orderId": { "type": "integer" },
                "status": { "type": "string", "example": "completed" }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Order status updated successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": { "message": { "type": "string" } }
              }
            }
          }
        },
        "404": {
          "description": "Order not found",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ErrorResponse" }
            }
          }
        },
        "500": {
          "description": "Internal server error",
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ErrorResponse" }
            }
          }
        }
      }
    }
  },
  "/api/guest/order": {
    "post": {
      "summary": "Place an order (guest, wallet charged)",
      "tags": [
        "Guest"
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GuestOrderRequest"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "OK",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GuestOrderResponse"
              }
            }
          }
        },
        "402": {
          "description": "Insufficient wallet balance",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ErrorResponse"
              }
            }
          }
        }
      }
    }
  }
}
}